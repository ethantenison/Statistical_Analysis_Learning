df <- EnergyAudit_clean
df <- clean_names(df)
colnames(df)
names(df)
blah <- colnames(df)
blah
View(df)
print(names(df))
blah
?tree
library(janitor)
df <- EnergyAudit_clean
df <- clean_names(df)
train <- filter(df, set = "train")
library(janitor)
df <- EnergyAudit_clean
df <- clean_names(df)
train <- filter(df, set == "train")
unique(df$set)
library(janitor)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == "train")
library(janitor)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
?filter
train <- filter(df, set == train)
test <- filter(df, set == test)
# A5 script
# RECS analysis file
# D. Cale Reeves
# UT Austin, Energy Systems Transformation Group
# Created: 2019/01/29
#
#
#---------------#
# Run Parameters
#---------------#
options("width"=180)
OutFile <- file("200315_SAL_A5q2_sol_DCR_Out.txt")
sink(OutFile, append=FALSE, type=c("output"))
sink(OutFile, append=FALSE, type=c("message"))
set.seed(1)
#---------------#
# Libraries
#---------------#
library(ggmap)
library(MASS)
library(reshape2)
library(scales)
library(tree)
#---------------#
# Load Data
#---------------#
EnergyAudit <- read.csv("Map__2009-2013__ECAD_Residential_Energy_Audit_Data.csv")
#head(EnergyAudit)
#tail(EnergyAudit)
print(sprintf("EnergyAudit data has %d rows with %d columns", nrow(EnergyAudit), ncol(EnergyAudit)))
#---------------#
# Clean Data
#---------------#
#str(EnergyAudit)
EnergyAudit$Address <- as.character(EnergyAudit$Address)
EnergyAudit$Coords <- sapply(EnergyAudit$Address, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern ='\n',i)[[1]][2])
#print(nchar(i))
#print(substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i)))
substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i))
})
head(EnergyAudit$Coords)
EnergyAudit$Lat <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
as.numeric(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
})
head(EnergyAudit$Lat)
EnergyAudit$Long <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
as.numeric(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
})
#head(EnergyAudit)
EnergyAudit_clean <-  EnergyAudit[EnergyAudit$Duct.System.1...Type != "",]
nrow(EnergyAudit_clean)
#head(EnergyAudit_clean)
EnergyAudit_clean <- EnergyAudit_clean[,c("TCAD.or.WCAD.Property.ID..s.",
"Duct.System.1...Type",
"Duct.System.1...RValue",
"Duct.System.1...Return.Sizing",
"Duct.System.1.....Leakage",
"System.1...Location.Air.Handler",
"System.1...Air.Handler.Type",
"System.1...Age..years.",
#	"System.1...EER",
"System.1...sqft.ton",
"Water.Heater...Fuel.Type",
"Water.Heating...Tank.Type",
"Toilet.Type",
"Programmable.Thermostat.Present",
"Window.Screen.Area.Recommended..sqft.",
"Furnace...Fuel.Type",
"Attic.R.Value",
"Recommended.Additional.R.Value",
"Year.Built",
"Bedrooms",
"Conditioned..sqft.",
"Attic..sqft.",
"Home_Type",
"Lat",
"Long")]
#head(EnergyAudit_clean)
EnergyAudit_clean <-  EnergyAudit_clean[!is.na(EnergyAudit_clean$System.1...Age..years.),]
EnergyAudit_clean$Attic..sqft.[is.na(EnergyAudit_clean$Attic..sqft.)] = 0
EnergyAudit_clean$Attic.R.Value[is.na(EnergyAudit_clean$Attic.R.Value)] = 0
EnergyAudit_clean$Recommended.Additional.R.Value[is.na(EnergyAudit_clean$Recommended.Additional.R.Value)] = 0
# summary(EnergyAudit_clean$Duct.System.1...Type, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...RValue, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...Return.Sizing, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1.....Leakage, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Location.Air.Handler, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Air.Handler.Type, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Age..years., exclude=NULL)
# #summary(EnergyAudit_clean$System.1...EER, exclude=NULL)
# summary(EnergyAudit_clean$System.1...sqft.ton, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heater...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heating...Tank.Type, exclude=NULL)
# summary(EnergyAudit_clean$Toilet.Type, exclude=NULL)
# summary(EnergyAudit_clean$Programmable.Thermostat.Present, exclude=NULL)
# summary(EnergyAudit_clean$Window.Screen.Area.Recommended..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Furnace...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Attic.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Recommended.Additional.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Year.Built, exclude=NULL)
# summary(EnergyAudit_clean$Bedrooms, exclude=NULL)
# summary(EnergyAudit_clean$Conditioned..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Attic..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Home_Type, exclude=NULL)
# summary(EnergyAudit_clean$Lat, exclude=NULL)
# summary(EnergyAudit_clean$Long, exclude=NULL)
nrow(EnergyAudit_clean)
nrow(na.omit(EnergyAudit_clean))
EnergyAudit_clean <- na.omit(EnergyAudit_clean)
print(sprintf("EnergyAudit_clean data: Longitude Range: (%f,%f). Width: %f", min(EnergyAudit_clean$Long),max(EnergyAudit_clean$Long),min(EnergyAudit_clean$Long) - max(EnergyAudit_clean$Long)))
print(sprintf("EnergyAudit_clean data: Latitude Range: (%f,%f). Height: %f", min(EnergyAudit_clean$Lat),max(EnergyAudit_clean$Lat),min(EnergyAudit_clean$Lat) - max(EnergyAudit_clean$Lat)))
LongRange = c(-98, -97.56)
LatRange = c(30.09, 30.47)
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Long > min(LongRange) & EnergyAudit_clean$Long < max(LongRange), ]
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Lat > min(LatRange) & EnergyAudit_clean$Lat < max(LatRange), ]
print(sprintf("Trimming map to: Latitude Range: (%f,%f),  Latitude Range: (%f,%f)", min(LatRange),max(LatRange),min(LongRange),max(LongRange)))
print(sprintf("EnergyAudit_clean data now has %d rows with %d columns", nrow(EnergyAudit_clean), ncol(EnergyAudit_clean)))
EnergyAudit_clean$set <- sample(c("train", "test"), size=nrow(EnergyAudit_clean), replace=TRUE, prob=c(0.70,0.30))
table(EnergyAudit_clean$set)
summary(EnergyAudit_clean$Duct.System.1.....Leakage)
EnergyAudit_clean$NeedsDuctFixed <- 0
EnergyAudit_clean$NeedsDuctFixed[EnergyAudit_clean$Duct.System.1.....Leakage > quantile(EnergyAudit_clean$Duct.System.1.....Leakage, probs=c(0.8)) ] = 1
EnergyAudit_clean$NeedsDuctFixed <- as.factor(EnergyAudit_clean$NeedsDuctFixed)
table(EnergyAudit_clean$NeedsDuctFixed, EnergyAudit_clean$set)
library(janitor)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
colnames(df)
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
test <- filter(df, set == test)
### Growing a decision tree ###
library(tree)
mod.tree <- tree(duct_system_1_leakage ~ system_1_location_air_handler + system_1_age_years + furnance_fuel_type + home_type + system_1_sqft_ton,
data = train, mindev = 0.001, minsize = 5 )
View(df)
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
test <- filter(df, set == test)
### Growing a decision tree ###
library(tree)
mod.tree <- tree(duct_system_1_leakage ~ system_1_location_air_handler + system_1_age_years + furnace_fuel_type + home_type + system_1_sqft_ton,
data = train, mindev = 0.001, minsize = 5 )
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- filter(df, set == train)
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- dplyr::filter(df, set == train)
# A5 script
# RECS analysis file
# D. Cale Reeves
# UT Austin, Energy Systems Transformation Group
# Created: 2019/01/29
#
#
#---------------#
# Run Parameters
#---------------#
options("width"=180)
OutFile <- file("200315_SAL_A5q2_sol_DCR_Out.txt")
sink(OutFile, append=FALSE, type=c("output"))
sink(OutFile, append=FALSE, type=c("message"))
set.seed(1)
#---------------#
# Libraries
#---------------#
library(ggmap)
library(MASS)
library(reshape2)
library(scales)
library(tree)
#---------------#
# Load Data
#---------------#
EnergyAudit <- read.csv("Map__2009-2013__ECAD_Residential_Energy_Audit_Data.csv")
#head(EnergyAudit)
#tail(EnergyAudit)
print(sprintf("EnergyAudit data has %d rows with %d columns", nrow(EnergyAudit), ncol(EnergyAudit)))
#---------------#
# Clean Data
#---------------#
#str(EnergyAudit)
EnergyAudit$Address <- as.character(EnergyAudit$Address)
EnergyAudit$Coords <- sapply(EnergyAudit$Address, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern ='\n',i)[[1]][2])
#print(nchar(i))
#print(substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i)))
substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i))
})
head(EnergyAudit$Coords)
EnergyAudit$Lat <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
as.numeric(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
})
head(EnergyAudit$Lat)
EnergyAudit$Long <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
as.numeric(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
})
#head(EnergyAudit)
EnergyAudit_clean <-  EnergyAudit[EnergyAudit$Duct.System.1...Type != "",]
nrow(EnergyAudit_clean)
#head(EnergyAudit_clean)
EnergyAudit_clean <- EnergyAudit_clean[,c("TCAD.or.WCAD.Property.ID..s.",
"Duct.System.1...Type",
"Duct.System.1...RValue",
"Duct.System.1...Return.Sizing",
"Duct.System.1.....Leakage",
"System.1...Location.Air.Handler",
"System.1...Air.Handler.Type",
"System.1...Age..years.",
#	"System.1...EER",
"System.1...sqft.ton",
"Water.Heater...Fuel.Type",
"Water.Heating...Tank.Type",
"Toilet.Type",
"Programmable.Thermostat.Present",
"Window.Screen.Area.Recommended..sqft.",
"Furnace...Fuel.Type",
"Attic.R.Value",
"Recommended.Additional.R.Value",
"Year.Built",
"Bedrooms",
"Conditioned..sqft.",
"Attic..sqft.",
"Home_Type",
"Lat",
"Long")]
#head(EnergyAudit_clean)
EnergyAudit_clean <-  EnergyAudit_clean[!is.na(EnergyAudit_clean$System.1...Age..years.),]
EnergyAudit_clean$Attic..sqft.[is.na(EnergyAudit_clean$Attic..sqft.)] = 0
EnergyAudit_clean$Attic.R.Value[is.na(EnergyAudit_clean$Attic.R.Value)] = 0
EnergyAudit_clean$Recommended.Additional.R.Value[is.na(EnergyAudit_clean$Recommended.Additional.R.Value)] = 0
# summary(EnergyAudit_clean$Duct.System.1...Type, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...RValue, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...Return.Sizing, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1.....Leakage, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Location.Air.Handler, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Air.Handler.Type, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Age..years., exclude=NULL)
# #summary(EnergyAudit_clean$System.1...EER, exclude=NULL)
# summary(EnergyAudit_clean$System.1...sqft.ton, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heater...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heating...Tank.Type, exclude=NULL)
# summary(EnergyAudit_clean$Toilet.Type, exclude=NULL)
# summary(EnergyAudit_clean$Programmable.Thermostat.Present, exclude=NULL)
# summary(EnergyAudit_clean$Window.Screen.Area.Recommended..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Furnace...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Attic.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Recommended.Additional.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Year.Built, exclude=NULL)
# summary(EnergyAudit_clean$Bedrooms, exclude=NULL)
# summary(EnergyAudit_clean$Conditioned..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Attic..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Home_Type, exclude=NULL)
# summary(EnergyAudit_clean$Lat, exclude=NULL)
# summary(EnergyAudit_clean$Long, exclude=NULL)
nrow(EnergyAudit_clean)
nrow(na.omit(EnergyAudit_clean))
EnergyAudit_clean <- na.omit(EnergyAudit_clean)
print(sprintf("EnergyAudit_clean data: Longitude Range: (%f,%f). Width: %f", min(EnergyAudit_clean$Long),max(EnergyAudit_clean$Long),min(EnergyAudit_clean$Long) - max(EnergyAudit_clean$Long)))
print(sprintf("EnergyAudit_clean data: Latitude Range: (%f,%f). Height: %f", min(EnergyAudit_clean$Lat),max(EnergyAudit_clean$Lat),min(EnergyAudit_clean$Lat) - max(EnergyAudit_clean$Lat)))
LongRange = c(-98, -97.56)
LatRange = c(30.09, 30.47)
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Long > min(LongRange) & EnergyAudit_clean$Long < max(LongRange), ]
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Lat > min(LatRange) & EnergyAudit_clean$Lat < max(LatRange), ]
print(sprintf("Trimming map to: Latitude Range: (%f,%f),  Latitude Range: (%f,%f)", min(LatRange),max(LatRange),min(LongRange),max(LongRange)))
print(sprintf("EnergyAudit_clean data now has %d rows with %d columns", nrow(EnergyAudit_clean), ncol(EnergyAudit_clean)))
EnergyAudit_clean$set <- sample(c("train", "test"), size=nrow(EnergyAudit_clean), replace=TRUE, prob=c(0.70,0.30))
table(EnergyAudit_clean$set)
summary(EnergyAudit_clean$Duct.System.1.....Leakage)
EnergyAudit_clean$NeedsDuctFixed <- 0
EnergyAudit_clean$NeedsDuctFixed[EnergyAudit_clean$Duct.System.1.....Leakage > quantile(EnergyAudit_clean$Duct.System.1.....Leakage, probs=c(0.8)) ] = 1
EnergyAudit_clean$NeedsDuctFixed <- as.factor(EnergyAudit_clean$NeedsDuctFixed)
table(EnergyAudit_clean$NeedsDuctFixed, EnergyAudit_clean$set)
library(janitor)
library(dplyr)
df <- EnergyAudit_clean
df <- clean_names(df)
df <- na.omit(df)
train <- dplyr::filter(df, set == train)
# A5 script
# RECS analysis file
# D. Cale Reeves
# UT Austin, Energy Systems Transformation Group
# Created: 2019/01/29
#
#
#---------------#
# Run Parameters
#---------------#
options("width"=180)
OutFile <- file("200315_SAL_A5q2_sol_DCR_Out.txt")
sink(OutFile, append=FALSE, type=c("output"))
sink(OutFile, append=FALSE, type=c("message"))
set.seed(1)
#---------------#
# Libraries
#---------------#
library(ggmap)
library(MASS)
library(reshape2)
library(scales)
library(tree)
#---------------#
# Load Data
#---------------#
EnergyAudit <- read.csv("Map__2009-2013__ECAD_Residential_Energy_Audit_Data.csv")
#head(EnergyAudit)
#tail(EnergyAudit)
print(sprintf("EnergyAudit data has %d rows with %d columns", nrow(EnergyAudit), ncol(EnergyAudit)))
#---------------#
# Clean Data
#---------------#
#str(EnergyAudit)
EnergyAudit$Address <- as.character(EnergyAudit$Address)
EnergyAudit$Coords <- sapply(EnergyAudit$Address, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern ='\n',i)[[1]][2])
#print(nchar(i))
#print(substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i)))
substr(i, gregexpr(pattern ='\n',i)[[1]][2]+1, nchar(i))
})
head(EnergyAudit$Coords)
EnergyAudit$Lat <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
as.numeric(substr(i, 2, gregexpr(pattern =', ',i)[[1]][1]-1))
})
head(EnergyAudit$Lat)
EnergyAudit$Long <- sapply(EnergyAudit$Coords, function (i) {
#print(i)
#print(gregexpr(pattern ='\n',i))
#print(gregexpr(pattern =', ',i)[[1]][1])
#print(nchar(i))
#print(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
as.numeric(substr(i, gregexpr(pattern =', ',i)[[1]][1]+2, nchar(i)-1))
})
#head(EnergyAudit)
EnergyAudit_clean <-  EnergyAudit[EnergyAudit$Duct.System.1...Type != "",]
nrow(EnergyAudit_clean)
#head(EnergyAudit_clean)
EnergyAudit_clean <- EnergyAudit_clean[,c("TCAD.or.WCAD.Property.ID..s.",
"Duct.System.1...Type",
"Duct.System.1...RValue",
"Duct.System.1...Return.Sizing",
"Duct.System.1.....Leakage",
"System.1...Location.Air.Handler",
"System.1...Air.Handler.Type",
"System.1...Age..years.",
#	"System.1...EER",
"System.1...sqft.ton",
"Water.Heater...Fuel.Type",
"Water.Heating...Tank.Type",
"Toilet.Type",
"Programmable.Thermostat.Present",
"Window.Screen.Area.Recommended..sqft.",
"Furnace...Fuel.Type",
"Attic.R.Value",
"Recommended.Additional.R.Value",
"Year.Built",
"Bedrooms",
"Conditioned..sqft.",
"Attic..sqft.",
"Home_Type",
"Lat",
"Long")]
#head(EnergyAudit_clean)
EnergyAudit_clean <-  EnergyAudit_clean[!is.na(EnergyAudit_clean$System.1...Age..years.),]
EnergyAudit_clean$Attic..sqft.[is.na(EnergyAudit_clean$Attic..sqft.)] = 0
EnergyAudit_clean$Attic.R.Value[is.na(EnergyAudit_clean$Attic.R.Value)] = 0
EnergyAudit_clean$Recommended.Additional.R.Value[is.na(EnergyAudit_clean$Recommended.Additional.R.Value)] = 0
# summary(EnergyAudit_clean$Duct.System.1...Type, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...RValue, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1...Return.Sizing, exclude=NULL)
# summary(EnergyAudit_clean$Duct.System.1.....Leakage, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Location.Air.Handler, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Air.Handler.Type, exclude=NULL)
# summary(EnergyAudit_clean$System.1...Age..years., exclude=NULL)
# #summary(EnergyAudit_clean$System.1...EER, exclude=NULL)
# summary(EnergyAudit_clean$System.1...sqft.ton, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heater...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Water.Heating...Tank.Type, exclude=NULL)
# summary(EnergyAudit_clean$Toilet.Type, exclude=NULL)
# summary(EnergyAudit_clean$Programmable.Thermostat.Present, exclude=NULL)
# summary(EnergyAudit_clean$Window.Screen.Area.Recommended..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Furnace...Fuel.Type, exclude=NULL)
# summary(EnergyAudit_clean$Attic.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Recommended.Additional.R.Value, exclude=NULL)
# summary(EnergyAudit_clean$Year.Built, exclude=NULL)
# summary(EnergyAudit_clean$Bedrooms, exclude=NULL)
# summary(EnergyAudit_clean$Conditioned..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Attic..sqft., exclude=NULL)
# summary(EnergyAudit_clean$Home_Type, exclude=NULL)
# summary(EnergyAudit_clean$Lat, exclude=NULL)
# summary(EnergyAudit_clean$Long, exclude=NULL)
nrow(EnergyAudit_clean)
nrow(na.omit(EnergyAudit_clean))
EnergyAudit_clean <- na.omit(EnergyAudit_clean)
print(sprintf("EnergyAudit_clean data: Longitude Range: (%f,%f). Width: %f", min(EnergyAudit_clean$Long),max(EnergyAudit_clean$Long),min(EnergyAudit_clean$Long) - max(EnergyAudit_clean$Long)))
print(sprintf("EnergyAudit_clean data: Latitude Range: (%f,%f). Height: %f", min(EnergyAudit_clean$Lat),max(EnergyAudit_clean$Lat),min(EnergyAudit_clean$Lat) - max(EnergyAudit_clean$Lat)))
LongRange = c(-98, -97.56)
LatRange = c(30.09, 30.47)
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Long > min(LongRange) & EnergyAudit_clean$Long < max(LongRange), ]
EnergyAudit_clean <- EnergyAudit_clean[EnergyAudit_clean$Lat > min(LatRange) & EnergyAudit_clean$Lat < max(LatRange), ]
print(sprintf("Trimming map to: Latitude Range: (%f,%f),  Latitude Range: (%f,%f)", min(LatRange),max(LatRange),min(LongRange),max(LongRange)))
print(sprintf("EnergyAudit_clean data now has %d rows with %d columns", nrow(EnergyAudit_clean), ncol(EnergyAudit_clean)))
EnergyAudit_clean$set <- sample(c("train", "test"), size=nrow(EnergyAudit_clean), replace=TRUE, prob=c(0.70,0.30))
table(EnergyAudit_clean$set)
summary(EnergyAudit_clean$Duct.System.1.....Leakage)
EnergyAudit_clean$NeedsDuctFixed <- 0
EnergyAudit_clean$NeedsDuctFixed[EnergyAudit_clean$Duct.System.1.....Leakage > quantile(EnergyAudit_clean$Duct.System.1.....Leakage, probs=c(0.8)) ] = 1
EnergyAudit_clean$NeedsDuctFixed <- as.factor(EnergyAudit_clean$NeedsDuctFixed)
table(EnergyAudit_clean$NeedsDuctFixed, EnergyAudit_clean$set)
write.csv("assignment5_q2_cleaned.csv", EnergyAudit_clean)
write.csv("assignment5_q2_cleaned.csv", EnergyAudit_clean)
write.csv("assignment5_q2_cleaned.csv", EnergyAudit_clean)
write.csv(EnergyAudit_clean, "assignment5_q2_cleaned.csv")
library(janitor)
library(dplyr)
library(readr)
df <- read_csv("assignment5_q2_cleaned.csv")
df <- clean_names(df)
df <- na.omit(df)
train <- dplyr::filter(df, set == train)
df <- read_csv("assignment5_q2_cleaned.csv")
df <- clean_names(df)
df <- na.omit(df)
View(df)
str(df$set)
