results <- boot(data=df, statistic=bs,
R=1000)
results
library(boot)
bs <- function(data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(y ~ x + x2, data=d)
return(-coef(fit)["x"]/(2*coef(fit)["x2"]))
}
results <- boot(data=df, statistic=bs,
R=1000)
results
library(boot)
model <- lm(y ~ x + x2, data = df)
summary(model)
library(boot)
model <- lm(y ~ x + x2, data = df)
summary(model)
newdata <- data.frame(x=54.2857143)
predict(model, newdata,interval="prediction")
library(boot)
model <- lm(y ~ x + x2, data = df)
summary(model)
library(boot)
bs <- function(data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(y ~ x + x2, data=d, subset= indices)
return(-coef(fit)["x"]/(2*coef(fit)["x2"]))
}
results <- boot(data=df, statistic=bs,
R=1000)
library(ggplot2)
set.seed(666)
x <- rnorm(100, 75, 20)
x2 <- x*x
e <- rnorm(100, 0, 7)
y <- 125 + -3.8*x + 0.035*x**2
df <- data.frame(y, x, x2)
ggplot(data = df, aes(x=x, y=y)) + geom_point() + geom_vline(xintercept = 54.2857143, linetype = "dashed", color = "red")
library(boot)
model <- lm(y ~ x + x2, data = df)
summary(model)
library(boot)
bs <- function(data, indices) {
d <- data[indices,] # allows boot to select sample
fit <- lm(y ~ x + x2, data=d, subset= indices)
return(-coef(fit)["x"]/(2*coef(fit)["x2"]))
}
results <- boot(data=df, statistic=bs,
R=1000)
results
set.seed(2)
rand <- sample(nrow(atx))
k1row <- rand[rand %% 5 + 1 == 1]
k2row <- rand[rand %% 5 + 1 == 2]
k3row <- rand[rand %% 5 + 1 == 3]
k4row <- rand[rand %% 5 + 1 == 4]
k5row <- rand[rand %% 5 + 1 == 5]
k1fold <- atx[k1row,]
k2fold <- atx[k2row,]
k3fold <- atx[k3row,]
k4fold <- atx[k4row,]
k5fold <- atx[k5row,]
print("Summary Statistics for 5 folds")
summary(k1fold$hi_use)
summary(k2fold$hi_use)
summary(k3fold$hi_use)
summary(k4fold$hi_use)
summary(k5fold$hi_use)
#model with k1fold as test
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=rbind(k2fold, k3fold,k4fold,k5fold))
p <- predict(model, k1fold, type = "response")
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, k1fold[["hi_use"]]))
#model with k2fold as test
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=rbind(k1fold, k3fold,k4fold,k5fold))
p <- predict(model, k2fold, type = "response")
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, k2fold[["hi_use"]]))
#Model with k3fold as test
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=rbind(k2fold, k1fold,k4fold,k5fold))
p <- predict(model, k3fold, type = "response")
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, k3fold[["hi_use"]]))
#Model with k4fold as test
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=rbind(k2fold, k1fold,k3fold,k5fold))
p <- predict(model, k4fold, type = "response")
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, k4fold[["hi_use"]]))
#Model with k5fold as test
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=rbind(k2fold, k1fold,k3fold,k4fold))
p <- predict(model, k5fold, type = "response")
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, k5fold[["hi_use"]]))
library(readr)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
str(data)
library(readr)
library(dplyr)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis")
library(readr)
library(dplyr)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas")
data <- filter(data, data$County_name == "Travis")
library(readr)
library(dplyr)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas")
data <- filter(data, data$County_name == "Travis County")
colnames(data)
View(data)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
split = sample.split(data$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
View(data)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data_noID_noMC, split == TRUE)
test = subset(data_noID_noMC, split == FALSE)
install.packages("leaps")
library(caret)
library(leaps)
library(MASS)
?stepAIC
library(caret)
library(leaps)
library(MASS)
# Fit the full model
full.model <- lm(Fertility ~., data = train)
library(caret)
library(leaps)
library(MASS)
# Fit the full model
full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "forward",
trace = FALSE)
summary(step.model)
library(caret)
library(leaps)
library(MASS)
# Fit the full model
full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "forward", steps = 10,
trace = FALSE)
summary(step.model)
library(caret)
library(leaps)
library(MASS)
# Fit the full model
full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "forward", steps = 10,
trace = FALSE)
summary(step.model)
models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
summary(models)
summary(models)
install.packages("olsrr")
?ols_step_forward_aic
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.0001)
#This gives you the short summary of the models at each step
FWDfit.p
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.001)
#This gives you the short summary of the models at each step
FWDfit.p
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.0005)
#This gives you the short summary of the models at each step
FWDfit.p
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.0002)
#This gives you the short summary of the models at each step
FWDfit.p
?ols_step_backward_p
?ols_step_backward_aic
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.0002)
#This gives you the short summary of the models at each step
print("Forward")
print(FWDfit.p)
BWDfit.p<-ols_step_backward_p(model,penter=.0002)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
BWDfit.p<-ols_step_backward_p(model,penter=.00001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
BWDfit.p<-ols_step_backward_p(model,penter=.0000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
BWDfit.p<-ols_step_backward_p(model,penter=.001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
?ols_step_backward_p
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
BWDfit.p<-ols_step_backward_p(model)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data_noID_noMC, split == TRUE)
test = subset(data_noID_noMC, split == FALSE)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
BWDfit.p<-ols_step_backward_p(model)
BWDfit.p<-ols_step_backward_p(model, prem = .000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
BWDfit.p <-ols_step_backward_p(model, prem = .000000000000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data_noID_noMC, split == TRUE)
test = subset(data_noID_noMC, split == FALSE)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
BWDfit.p <-ols_step_backward_p(model, prem = .0000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data_noID_noMC, split == TRUE)
test = subset(data_noID_noMC, split == FALSE)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
BWDfit.p <-ols_step_backward_p(model, prem = .000000000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
library(readr)
library(dplyr)
library(caTools)
set.seed(27)
data <- read_csv("pdb2016bgv8_us_clean (1).csv")
data <- filter(data, data$State_name == "Texas" & data$County_name == "Travis County")
drop_columns <- c("TEA_Update_Leave_CEN_2010", "BILQ_Mailout_count_CEN_2010", "BILQ_Frms_CEN_2010",
"pct_TEA_Update_Leave_CEN_2010", "pct_BILQ_Mailout_count_CEN_2010", "Low_Response_Score",
"Census_Mail_Returns_CEN_2010")
data <- data[ , !(names(data) %in% drop_columns)]
data_noID <- data[9:ncol(data)]
drop_LD_columns <- c("AIAN_LAND", "Tot_Population_CEN_2010", "Females_CEN_2010", "Females_ACS_10_14",
"Pop_65plus_CEN_2010", "Pop_65plus_ACS_10_14", "Non_Inst_GQ_CEN_2010", "Pop_5yrs_Over_ACS_10_14",
"Pop_25yrs_Over_ACS_10_14", "ENG_VW_ACS_10_14", "NonFamily_HHD_CEN_2010", "NonFamily_HHD_ACS_10_14",
"Tot_Prns_in_HHD_CEN_2010", "Tot_Occp_Units_CEN_2010", "Tot_Occp_Units_ACS_10_14", "Tot_Vacant_Units_CEN_2010",
"Tot_Vacant_Units_ACS_10_14", "Owner_Occp_HU_CEN_2010", "Owner_Occp_HU_ACS_10_14",
"Valid_Mailback_Count_CEN_2010", "pct_Females_CEN_2010", "pct_Pop_5yrs_Over_ACS_10_14",
"pct_Not_MrdCple_HHD_CEN_2010", "pct_Vacant_Units_ACS_10_14", "pct_Owner_Occp_HU_CEN_2010",
"pct_TEA_MailOutMailBack_CEN_2010", "pct_Deletes_CEN_2010")
data_noID_noMC <- data_noID [ , !(names(data_noID) %in% drop_LD_columns)]
data_noID_noMC <- data_noID_noMC [, -grep("pct_", colnames(data_noID_noMC))]
split = sample.split(data_noID_noMC$Mail_Return_Rate_CEN_2010, SplitRatio = 0.80)
train = subset(data_noID_noMC, split == TRUE)
test = subset(data_noID_noMC, split == FALSE)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
BWDfit.p <-ols_step_backward_p(model, prem = .00000000000000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
View(BWDfit.p)
BWDfit.p$removed
library(caret)
library(leaps)
library(MASS)
# Fit the full model
#full.model <- lm(Mail_Return_Rate_CEN_2010 ~., data = train)
# Stepwise regression model
#step.model <- stepAIC(full.model, direction = "forward", steps = 10,
#                      trace = FALSE)
#summary(step.model)
#models <- regsubsets(Mail_Return_Rate_CEN_2010~., data = train, nvmax = 10, method = "forward")
#summary(models)
library(olsrr)
model<-lm(Mail_Return_Rate_CEN_2010~., data = train)
FWDfit.p<-ols_step_forward_p(model,penter=.0002)
#This gives you the short summary of the models at each step
print("Forward")
print(FWDfit.p)
BWDfit.p <-ols_step_backward_p(model, prem = .0000001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
BWDfit.p <-ols_step_backward_p(model, prem = .01)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
View(BWDfit.p)
BWDfit.p <-ols_step_backward_p(model, prem = .0001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
View(BWDfit.p)
BWDfit.p <-ols_step_backward_p(model, prem = .00001)
#This gives you the short summary of the models at each step
print("Backward")
print(BWDfit.p)
View(BWDfit.p)
