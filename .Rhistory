logdf$HiResIrr[i] <- 0
}
}
set.seed(88)
split = sample.split(logdf$HiResIrr, SplitRatio = 0.75)
logdf <- dplyr::select(logdf, -c(irrigation_residential, postal_code))
train = subset(logdf, split == TRUE)
test = subset(logdf, split == FALSE)
model <- glm(HiResIrr ~.,family=binomial(link='logit'),data=train)
summary(model)
library(class)
library(gmodels)
dfknn <- dfwide
for (i in 1:length(dfknn$irrigation_residential)){
if(dfknn$irrigation_residential[i] > mean(dfknn$irrigation_residential)){
dfknn$HiResIrr[i] <- 1
}
else if(dfknn$irrigation_residential[i] <= mean(dfknn$irrigation_residential)){
dfknn$HiResIrr[i] <- 0
}
}
set.seed(88)
dfknn <- dplyr::select(dfknn, -c(irrigation_residential, postal_code))
dmy <- dummyVars(" ~ .", data = dfknn)
library(class)
library(gmodels)
library(caret)
dfknn <- dfwide
for (i in 1:length(dfknn$irrigation_residential)){
if(dfknn$irrigation_residential[i] > mean(dfknn$irrigation_residential)){
dfknn$HiResIrr[i] <- 1
}
else if(dfknn$irrigation_residential[i] <= mean(dfknn$irrigation_residential)){
dfknn$HiResIrr[i] <- 0
}
}
set.seed(88)
dfknn <- dplyr::select(dfknn, -c(irrigation_residential, postal_code))
dmy <- dummyVars(" ~ .", data = dfknn)
dfknn <- data.frame(predict(dmy, newdata = dfknn))
split = sample.split(dfknn$HiResIrr, SplitRatio = 0.8)
train_knn = subset(dfknn, split == TRUE)
train_labels = train_knn[["HiResIrr"]]
train_knn[is.na(train_knn)] <- 0
test_knn = subset(dfknn, split == FALSE)
test_labels = test_knn[["HiResIrr"]]
test_knn[is.na(test_knn)] <- 0
dfknn_prediction = class::knn(train= train_knn, test = test_knn, cl= train_labels, k = 4)
CrossTable(x= test_labels, y= dfknn_prediction, chisq = FALSE)
library(reshape2)
library(readr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water$Customer.Class <- gsub(" - ", "_", water$Customer.Class)
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
View(water)
library(reshape2)
library(readr)
library(janitor)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("austin_house_price.csv")
houses <- clean_names(houses)
atx <- merge(water, houses, by=”zip_code”, all.x=TRUE)
?left_join
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("austin_house_price.csv")
houses <- clean_names(houses)
atx <- left_join(water, houses, by=zip_code)
View(houses)
View(houses)
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- left_join(water, houses, by=zip_code)
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- left_join(water, houses, by="zip_code")
View(atx)
View(houses)
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- merge(water, houses, by="zip_code", all.x=TRUE)
View(atx)
?merge
View(water)
View(houses)
View(atx)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(axt, split == FALSE)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
summary(train$hi_use)
summary(test$hi_use)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print("Train set", summary(train$hi_use))
print("Test set", summary(test$hi_use))
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(paste0("Train set", summary(train$hi_use)))
print("Test set", summary(test$hi_use))
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- merge(water, houses, by="zip_code", all.x=TRUE)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
# print(summary(test$hi_use))
model <- glm(hi_use~.,family=binomial(link='logit'),data=train)
summary(model)
View(atx)
View(houses)
library(dplyr)
library(janitor)
library(reshape2)
df <- read.csv("Austin_Water_-_Residential_Water_Consumption.csv")
df <- clean_names(df)
df$year <- substr(df$year_month, 1, 4)
df$year <- as.numeric(df$year)
df$month <- substr(df$year_month, 5, 6)
df$month <- as.factor(df$month)
df <- dplyr::select(df, -c(year_month))
df$customer_class <- gsub(" - ", "_", df$customer_class)
df <- filter(df, postal_code != "")
df$total_gallons[is.na(df$total_gallons)] <- 0
dfwide <- dcast(data=df, postal_code+month+year~customer_class, value.var= 'total_gallons')
dfwide <- clean_names(dfwide)
df$total_gallons[is.na(df$total_gallons)] <- 0
dfwide[is.na(dfwide)] <- 0
library(caTools)
logdf <- dfwide
for (i in 1:length(logdf$irrigation_residential)){
if(logdf$irrigation_residential[i] > mean(logdf$irrigation_residential)){
logdf$HiResIrr[i] <- 1
}
else if(logdf$irrigation_residential[i] <= mean(logdf$irrigation_residential)){
logdf$HiResIrr[i] <- 0
}
}
set.seed(88)
split = sample.split(logdf$HiResIrr, SplitRatio = 0.75)
logdf <- dplyr::select(logdf, -c(irrigation_residential, postal_code))
train = subset(logdf, split == TRUE)
test = subset(logdf, split == FALSE)
model <- glm(HiResIrr ~.,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class + median_household_income + large_households_5_members + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- merge(water, houses, by="zip_code", all.x=TRUE)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
# print(summary(test$hi_use))
model <- glm(hi_use~ customer_class + median_household_income + large_households_5_members + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + large_households_5_members + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ median_home_value + median_household_income + large_households_5_members + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + large_households_5_members + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ median_home_value,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ median_home_value + median_household_income + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_rent + percentage_of_rental_units_in_poor_condition,family=binomial(link='logit'),data=train)
summary(model)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=train)
summary(model)
library(dplyr)
library(janitor)
library(reshape2)
df <- read.csv("Austin_Water_-_Residential_Water_Consumption.csv")
df <- clean_names(df)
df$year <- substr(df$year_month, 1, 4)
df$year <- as.numeric(df$year)
df$month <- substr(df$year_month, 5, 6)
df$month <- as.factor(df$month)
df <- dplyr::select(df, -c(year_month))
df$customer_class <- gsub(" - ", "_", df$customer_class)
df <- filter(df, postal_code != "")
df$total_gallons[is.na(df$total_gallons)] <- 0
dfwide <- dcast(data=df, postal_code+month+year~customer_class, value.var= 'total_gallons')
dfwide <- clean_names(dfwide)
df$total_gallons[is.na(df$total_gallons)] <- 0
dfwide[is.na(dfwide)] <- 0
library(caTools)
logdf <- dfwide
for (i in 1:length(logdf$irrigation_residential)){
if(logdf$irrigation_residential[i] > mean(logdf$irrigation_residential)){
logdf$HiResIrr[i] <- 1
}
else if(logdf$irrigation_residential[i] <= mean(logdf$irrigation_residential)){
logdf$HiResIrr[i] <- 0
}
}
set.seed(88)
split = sample.split(logdf$HiResIrr, SplitRatio = 0.75)
logdf <- dplyr::select(logdf, -c(irrigation_residential, postal_code))
train = subset(logdf, split == TRUE)
test = subset(logdf, split == FALSE)
model <- glm(HiResIrr ~.,family=binomial(link='logit'),data=train)
summary(model)
library(caret)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["HiResIrr"]]))
library(caret)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["hi_use"]]))
library(reshape2)
library(readr)
library(janitor)
library(dplyr)
water <- read_csv("Austin_Water_-_Residential_Water_Consumption.csv")
water <- clean_names(water)
water$customer_class <- gsub(" - ", "_", water$customer_class)
water$customer_class <- gsub("-", "_", water$customer_class)
water$year <- as.numeric(substr(water$year_month, 1, 4))
water$month <- as.numeric(substr(water$year_month, 5, 6))
water <- water[water$postal_code != "", ]
water <- na.omit(water)
water <- as.data.frame(aggregate(data=water, total_gallons~customer_class+year+postal_code, sum))
water <- water[water$year == 2014,]
water$hi_use <- 0
water$hi_use[water$total_gallons > mean(water$total_gallons)] = 1
water$zip_code <- water$postal_code
houses <- read_csv("2014_Housing_Market_Analysis_Data_by_Zip_Code.csv")
houses <- clean_names(houses)
atx <- merge(water, houses, by="zip_code", all.x=TRUE)
library(caTools)
set.seed(88)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=train)
summary(model)
library(caret)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["hi_use"]]))
set.seed(666)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=train)
summary(model)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["hi_use"]]))
set.seed(666)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=train)
summary(model)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["hi_use"]]))
set.seed(2)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
model <- glm(hi_use~ customer_class +median_home_value + median_household_income + median_rent ,family=binomial(link='logit'),data=train)
summary(model)
p <- predict(model, test, type = "response")
print(summary(p))
p_class <- ifelse(p > 0.5, "Predict 1", "Predict 0")
print(table(p_class, test[["hi_use"]]))
?sample.split
library(caTools)
set.seed(5)
split = sample.split(atx$hi_use, SplitRatio = 0.80)
train = subset(atx, split == TRUE)
test = subset(atx, split == FALSE)
print(summary(train$hi_use))
print(summary(test$hi_use))
